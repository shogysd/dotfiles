### directory check
if [ ! -d "$HOME/.ssh" ]; then
    mkdir ${HOME}/.ssh && echo "$HOME/.ssh was created."
fi

if [ ! -d "$HOME/.ssh/local_conf" ]; then
    mkdir ${HOME}/.ssh/local_conf && echo "$HOME/.ssh/local_conf was created."
fi

if [ ! -d "$HOME/.ssh/controlmaster" ] && [ "${SSH_CONNECTION}" = "" ]; then
    mkdir ${HOME}/.ssh/controlmaster && echo "$HOME/.ssh/controlmaster was created."
fi

mkdir -p ~/bin
for path_name in $( find ~/bin -maxdepth 1 -type d -or -type l -not -name '.*' ); do
    if [ ! "$( echo ${PATH} | grep ${path_name} )" ]; then
        PATH="${path_name}:${PATH}"
    fi
    export PATH
done


### load config files
if [ ! -d ~/dotfiles ]; then
    echo "~/dotfiles : No such directory"
fi

if [ -f ~/dotfiles/posix_shell/bash/environments ]; then
    . ~/dotfiles/posix_shell/bash/environments
else
    echo "~/dotfiles/posix_shell/bash/environments : No such file"
fi

if [ -f ~/dotfiles/posix_shell/common/prompt_script.sh ]; then
    . ~/dotfiles/posix_shell/common/prompt_script.sh
else
    echo "~/dotfiles/posix_shell/common/prompt_script.sh : No such file"
fi

if [ -f ~/dotfiles/posix_shell/common/aliases ]; then
    . ~/dotfiles/posix_shell/common/aliases
else
    echo "~/dotfiles/posix_shell/common/aliases : No such file"
fi

if [ -f ~/dotfiles/posix_shell/common/script.sh ]; then
    . ~/dotfiles/posix_shell/common/script.sh
else
    echo "~/dotfiles/posix_shell/common/script.sh : No such file"
fi

if [ -f ~/dotfiles/posix_shell/common/cmd_wrapper.sh ]; then
    . ~/dotfiles/posix_shell/common/cmd_wrapper.sh
else
    echo "~/dotfiles/posix_shell/common/cmd_wrapper.sh : No such file"
fi

if [ -f ~/dotfiles/posix_shell/common/script_dupbin.sh ]; then
    . ~/dotfiles/posix_shell/common/script_dupbin.sh
else
    echo "~/dotfiles/posix_shell/common/script_dupbin.sh : No such file"
fi


# shell dependent
if [ "${SHELL_NAME}" = "bash" ] && [ "${SHELL_NAME}" = "zsh" ]; then
    echo "SHELL_NAME is '${SHELL_NAME}'"
    echo "load error : input completion for bash and docker"
fi


# OS dependent
if [ "$(uname 2>&1)" = "Darwin" ]; then
    # macOS
    for p in $(find /Library/Frameworks/Python.framework/Versions/* -maxdepth 1 -name bin | sort -r); do
        ${p}/python3 --version | awk -F ' ' '{print $NF}' | grep -e a -e b > /dev/null
        if [ ! $? -eq 0 ]; then
            # PATH="${p}:$PATH"
            PATH="$PATH:${p}"
            break
        fi
        version=$(echo ${path} | awk -F '/' '{print $(NF - 1)}')
        echo "    python${version} bin PATH added"
    done
fi


# gcloud
if [ -f ~/google-cloud-sdk/path.${SHELL_NAME}.inc ]; then
    . ~/google-cloud-sdk/path.${SHELL_NAME}.inc
else
    echo "~/google-cloud-sdk/path.${SHELL_NAME}.inc : No such file"
fi

# gcloud
if [ -f ~/google-cloud-sdk/completion.${SHELL_NAME}.inc ]; then
    . ~/google-cloud-sdk/completion.${SHELL_NAME}.inc
else
    echo "~/google-cloud-sdk/completion.${SHELL_NAME}.inc : No such file"
fi
